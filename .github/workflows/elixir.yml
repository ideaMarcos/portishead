# https://www.richardtaylor.dev/articles/elixir-phoenix-release-workflow-github-ci
name: Elixir CI

on: push

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: OTP ${{ matrix.otp }} | Elixir ${{ matrix.elixir }} | Node ${{ matrix.node }} | OS ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        otp: [22.x]
        elixir: [1.9.x]
        node: [13.x]

    services:
      db:
        image: postgres:12
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres

    steps:
      - uses: actions/checkout@v1.0.0
      - uses: actions/setup-elixir@v1.0.0
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Run tests
        run: |
          mix compile
          mix format --check-formatted
          mix credo --strict
          mix sobelow -i Config.HTTPS,Config.Headers --exit
          mix test
        env:
          MIX_ENV: test
      # - name: Prepare release
      #   run: |
      #     mix compile
      #     yarn --cwd assets deploy
      #     mix phx.digest
      #     mix release
      #   env:
      #     MIX_ENV: prod
      # - name: Publish release
      #   uses: moomerman/actions/bin/ghr@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     RELEASE_PATH: _build/prod/rel
      #     APPLICATION: <<APP NAME>>
